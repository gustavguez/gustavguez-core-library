import * as momentImported from 'moment';
const moment = momentImported;
export class DateUtility {
    static todayLocaleString() {
        const today = moment();
        return DateUtility.localeString(today);
    }
    static todayDateString() {
        const today = moment();
        return today.format('YYYY-MM-DD');
    }
    static localeString(date) {
        return date.format('YYYY-MM-DD') + 'T' + date.format('HH:mm');
    }
    static todayAsPrettyString() {
        const today = moment();
        return today.format('DD/MM/YYYY');
    }
    static prettyDate(date, displayHour) {
        const momentDate = moment(date);
        let str = momentDate.format('DD/MM/YYYY');
        if (displayHour) {
            str += ' ' + DateUtility.prettyHour(date);
        }
        return str;
    }
    static prettyHour(date) {
        const momentDate = moment(date);
        return momentDate.format('HH:mm');
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZS51dGlsaXR5LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LWd1c3Rhdmd1ZXotY29yZS8iLCJzb3VyY2VzIjpbImxpYi91dGlsaXRpZXMvZGF0ZS51dGlsaXR5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sS0FBSyxjQUFjLE1BQU0sUUFBUSxDQUFDO0FBRXpDLE1BQU0sTUFBTSxHQUFHLGNBQWMsQ0FBQztBQUU5QixNQUFNLE9BQU8sV0FBVztJQUV2QixNQUFNLENBQUMsaUJBQWlCO1FBQ3ZCLE1BQU0sS0FBSyxHQUFRLE1BQU0sRUFBRSxDQUFDO1FBQzVCLE9BQU8sV0FBVyxDQUFDLFlBQVksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUN4QyxDQUFDO0lBRUQsTUFBTSxDQUFDLGVBQWU7UUFDckIsTUFBTSxLQUFLLEdBQVEsTUFBTSxFQUFFLENBQUM7UUFDNUIsT0FBTyxLQUFLLENBQUMsTUFBTSxDQUFDLFlBQVksQ0FBQyxDQUFDO0lBQ25DLENBQUM7SUFFRCxNQUFNLENBQUMsWUFBWSxDQUFDLElBQVM7UUFDNUIsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLFlBQVksQ0FBQyxHQUFHLEdBQUcsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQy9ELENBQUM7SUFFRCxNQUFNLENBQUMsbUJBQW1CO1FBQ3pCLE1BQU0sS0FBSyxHQUFRLE1BQU0sRUFBRSxDQUFDO1FBQzVCLE9BQU8sS0FBSyxDQUFDLE1BQU0sQ0FBQyxZQUFZLENBQUMsQ0FBQztJQUNuQyxDQUFDO0lBRUQsTUFBTSxDQUFDLFVBQVUsQ0FBQyxJQUFZLEVBQUUsV0FBcUI7UUFDcEQsTUFBTSxVQUFVLEdBQVEsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3JDLElBQUksR0FBRyxHQUFXLFVBQVUsQ0FBQyxNQUFNLENBQUMsWUFBWSxDQUFDLENBQUM7UUFFbEQsSUFBSSxXQUFXLEVBQUU7WUFDaEIsR0FBRyxJQUFJLEdBQUcsR0FBRyxXQUFXLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxDQUFDO1NBQzFDO1FBQ0QsT0FBTyxHQUFHLENBQUM7SUFDWixDQUFDO0lBRUQsTUFBTSxDQUFDLFVBQVUsQ0FBQyxJQUFZO1FBQzdCLE1BQU0sVUFBVSxHQUFRLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNyQyxPQUFPLFVBQVUsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDbkMsQ0FBQztDQUVEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgbW9tZW50SW1wb3J0ZWQgZnJvbSAnbW9tZW50JztcblxuY29uc3QgbW9tZW50ID0gbW9tZW50SW1wb3J0ZWQ7XG5cbmV4cG9ydCBjbGFzcyBEYXRlVXRpbGl0eSB7XG5cblx0c3RhdGljIHRvZGF5TG9jYWxlU3RyaW5nKCk6IHN0cmluZyB7XG5cdFx0Y29uc3QgdG9kYXk6IGFueSA9IG1vbWVudCgpO1xuXHRcdHJldHVybiBEYXRlVXRpbGl0eS5sb2NhbGVTdHJpbmcodG9kYXkpO1xuXHR9XG5cblx0c3RhdGljIHRvZGF5RGF0ZVN0cmluZygpOiBzdHJpbmcge1xuXHRcdGNvbnN0IHRvZGF5OiBhbnkgPSBtb21lbnQoKTtcblx0XHRyZXR1cm4gdG9kYXkuZm9ybWF0KCdZWVlZLU1NLUREJyk7XG5cdH1cblxuXHRzdGF0aWMgbG9jYWxlU3RyaW5nKGRhdGU6IGFueSk6IHN0cmluZyB7XG5cdFx0cmV0dXJuIGRhdGUuZm9ybWF0KCdZWVlZLU1NLUREJykgKyAnVCcgKyBkYXRlLmZvcm1hdCgnSEg6bW0nKTtcblx0fVxuXG5cdHN0YXRpYyB0b2RheUFzUHJldHR5U3RyaW5nKCk6IHN0cmluZyB7XG5cdFx0Y29uc3QgdG9kYXk6IGFueSA9IG1vbWVudCgpO1xuXHRcdHJldHVybiB0b2RheS5mb3JtYXQoJ0REL01NL1lZWVknKTtcblx0fVxuXG5cdHN0YXRpYyBwcmV0dHlEYXRlKGRhdGU6IHN0cmluZywgZGlzcGxheUhvdXI/OiBib29sZWFuKTogc3RyaW5nIHtcblx0XHRjb25zdCBtb21lbnREYXRlOiBhbnkgPSBtb21lbnQoZGF0ZSk7XG5cdFx0bGV0IHN0cjogc3RyaW5nID0gbW9tZW50RGF0ZS5mb3JtYXQoJ0REL01NL1lZWVknKTtcblxuXHRcdGlmIChkaXNwbGF5SG91cikge1xuXHRcdFx0c3RyICs9ICcgJyArIERhdGVVdGlsaXR5LnByZXR0eUhvdXIoZGF0ZSk7XG5cdFx0fVxuXHRcdHJldHVybiBzdHI7XG5cdH1cblxuXHRzdGF0aWMgcHJldHR5SG91cihkYXRlOiBzdHJpbmcpOiBzdHJpbmcge1xuXHRcdGNvbnN0IG1vbWVudERhdGU6IGFueSA9IG1vbWVudChkYXRlKTtcblx0XHRyZXR1cm4gbW9tZW50RGF0ZS5mb3JtYXQoJ0hIOm1tJyk7XG5cdH1cblxufVxuIl19