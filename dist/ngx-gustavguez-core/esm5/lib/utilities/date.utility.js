import * as momentImported from 'moment';
var moment = momentImported;
var DateUtility = /** @class */ (function () {
    function DateUtility() {
    }
    DateUtility.todayLocaleString = function () {
        var today = moment();
        return DateUtility.localeString(today);
    };
    DateUtility.todayDateString = function () {
        var today = moment();
        return today.format("YYYY-MM-DD");
    };
    DateUtility.localeString = function (date) {
        return date.format("YYYY-MM-DD") + "T" + date.format("HH:mm");
    };
    DateUtility.todayAsPrettyString = function () {
        var today = moment();
        return today.format("DD/MM/YYYY");
    };
    DateUtility.prettyDate = function (date, displayHour) {
        var d = moment(date);
        var str = d.format("DD/MM/YYYY");
        if (displayHour) {
            str += " " + DateUtility.prettyHour(date);
        }
        return str;
    };
    DateUtility.prettyHour = function (date) {
        var d = moment(date);
        return d.format("HH:mm");
    };
    return DateUtility;
}());
export { DateUtility };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZS51dGlsaXR5LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LWd1c3Rhdmd1ZXotY29yZS8iLCJzb3VyY2VzIjpbImxpYi91dGlsaXRpZXMvZGF0ZS51dGlsaXR5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sS0FBSyxjQUFjLE1BQU0sUUFBUSxDQUFDO0FBRXpDLElBQU0sTUFBTSxHQUFHLGNBQWMsQ0FBQztBQUU5QjtJQUFBO0lBb0NBLENBQUM7SUFsQ1UsNkJBQWlCLEdBQXhCO1FBQ0ksSUFBTSxLQUFLLEdBQVEsTUFBTSxFQUFFLENBQUM7UUFDNUIsT0FBTyxXQUFXLENBQUMsWUFBWSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQzNDLENBQUM7SUFFTSwyQkFBZSxHQUF0QjtRQUNJLElBQU0sS0FBSyxHQUFRLE1BQU0sRUFBRSxDQUFDO1FBQzVCLE9BQU8sS0FBSyxDQUFDLE1BQU0sQ0FBQyxZQUFZLENBQUMsQ0FBQztJQUN0QyxDQUFDO0lBRU0sd0JBQVksR0FBbkIsVUFBb0IsSUFBUztRQUN6QixPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsWUFBWSxDQUFDLEdBQUcsR0FBRyxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDbEUsQ0FBQztJQUVNLCtCQUFtQixHQUExQjtRQUNJLElBQU0sS0FBSyxHQUFRLE1BQU0sRUFBRSxDQUFDO1FBQzVCLE9BQU8sS0FBSyxDQUFDLE1BQU0sQ0FBQyxZQUFZLENBQUMsQ0FBQTtJQUNyQyxDQUFDO0lBRU0sc0JBQVUsR0FBakIsVUFBa0IsSUFBWSxFQUFFLFdBQXFCO1FBQ2pELElBQU0sQ0FBQyxHQUFRLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUM1QixJQUFJLEdBQUcsR0FBVyxDQUFDLENBQUMsTUFBTSxDQUFDLFlBQVksQ0FBQyxDQUFBO1FBRXhDLElBQUcsV0FBVyxFQUFDO1lBQ1gsR0FBRyxJQUFJLEdBQUcsR0FBRyxXQUFXLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxDQUFDO1NBQzdDO1FBQ0QsT0FBTyxHQUFHLENBQUM7SUFDZixDQUFDO0lBRU0sc0JBQVUsR0FBakIsVUFBa0IsSUFBWTtRQUMxQixJQUFNLENBQUMsR0FBUSxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDNUIsT0FBTyxDQUFDLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFBO0lBQzVCLENBQUM7SUFFTCxrQkFBQztBQUFELENBQUMsQUFwQ0QsSUFvQ0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBtb21lbnRJbXBvcnRlZCBmcm9tICdtb21lbnQnOyBcblxuY29uc3QgbW9tZW50ID0gbW9tZW50SW1wb3J0ZWQ7XG5cbmV4cG9ydCBjbGFzcyBEYXRlVXRpbGl0eSB7XG5cbiAgICBzdGF0aWMgdG9kYXlMb2NhbGVTdHJpbmcoKTogc3RyaW5nIHtcbiAgICAgICAgY29uc3QgdG9kYXk6IGFueSA9IG1vbWVudCgpO1xuICAgICAgICByZXR1cm4gRGF0ZVV0aWxpdHkubG9jYWxlU3RyaW5nKHRvZGF5KTtcbiAgICB9XG5cbiAgICBzdGF0aWMgdG9kYXlEYXRlU3RyaW5nKCk6IHN0cmluZyB7XG4gICAgICAgIGNvbnN0IHRvZGF5OiBhbnkgPSBtb21lbnQoKTtcbiAgICAgICAgcmV0dXJuIHRvZGF5LmZvcm1hdChcIllZWVktTU0tRERcIik7XG4gICAgfVxuXG4gICAgc3RhdGljIGxvY2FsZVN0cmluZyhkYXRlOiBhbnkpOiBzdHJpbmcge1xuICAgICAgICByZXR1cm4gZGF0ZS5mb3JtYXQoXCJZWVlZLU1NLUREXCIpICsgXCJUXCIgKyBkYXRlLmZvcm1hdChcIkhIOm1tXCIpO1xuICAgIH1cbiAgICBcbiAgICBzdGF0aWMgdG9kYXlBc1ByZXR0eVN0cmluZygpe1xuICAgICAgICBjb25zdCB0b2RheTogYW55ID0gbW9tZW50KCk7XG4gICAgICAgIHJldHVybiB0b2RheS5mb3JtYXQoXCJERC9NTS9ZWVlZXCIpXG4gICAgfVxuXG4gICAgc3RhdGljIHByZXR0eURhdGUoZGF0ZTogc3RyaW5nLCBkaXNwbGF5SG91cj86IGJvb2xlYW4pOiBzdHJpbmcge1xuICAgICAgICBjb25zdCBkOiBhbnkgPSBtb21lbnQoZGF0ZSk7XG4gICAgICAgIGxldCBzdHI6IHN0cmluZyA9IGQuZm9ybWF0KFwiREQvTU0vWVlZWVwiKVxuXG4gICAgICAgIGlmKGRpc3BsYXlIb3VyKXtcbiAgICAgICAgICAgIHN0ciArPSBcIiBcIiArIERhdGVVdGlsaXR5LnByZXR0eUhvdXIoZGF0ZSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHN0cjtcbiAgICB9XG5cbiAgICBzdGF0aWMgcHJldHR5SG91cihkYXRlOiBzdHJpbmcpOiBzdHJpbmcge1xuICAgICAgICBjb25zdCBkOiBhbnkgPSBtb21lbnQoZGF0ZSk7XG4gICAgICAgIHJldHVybiBkLmZvcm1hdChcIkhIOm1tXCIpXG4gICAgfVxuXG59Il19